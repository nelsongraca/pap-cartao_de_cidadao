/*
 * Projeto para o artigo "Extrair dados do cartão de cidadão com a linguagem de programação JAVA"
 * Para a comunidade e revista electrónica Portugal-a-Programar (http://www.portugal-a-programar.pt/)
 */
package PaPCC;

import static PaPCC.JMessageDialog.erroMsg;
import static PaPCC.JMessageDialog.infoMsg;
import static PaPCC.PortugueseID.validateSocialSecurityID;
import static PaPCC.PortugueseID.validatorTaxNumber;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.imgscalr.Scalr;

/**
 *
 * @author Ricardo Cabral
 */
public class PaPCC extends javax.swing.JFrame {

    private static final long serialVersionUID = 9000325075655443701L;
    private final CitizenCardPortuguese ccp = new CitizenCardPortuguese();

    /**
     * Creates new form PaPCC
     */
    public PaPCC() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            this.setIconImage(new ImageIcon(getClass().getResource("/imgs/pap_logo.png")).getImage());
            initComponents();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            erroMsg("Erro ao criar aplicação gráfica.", ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBReadData = new javax.swing.JButton();
        jPDataCard = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jCivilID = new javax.swing.JPanel();
        jLname = new javax.swing.JLabel();
        jTname = new javax.swing.JTextField();
        jTsex = new javax.swing.JTextField();
        jLsex = new javax.swing.JLabel();
        jLheight = new javax.swing.JLabel();
        jTheight = new javax.swing.JTextField();
        jLnationality = new javax.swing.JLabel();
        jTnationality = new javax.swing.JTextField();
        jbirthDate = new javax.swing.JLabel();
        jTbirthDate = new javax.swing.JTextField();
        jLnumBI = new javax.swing.JLabel();
        jTnumBI = new javax.swing.JTextField();
        jTnumBI2 = new javax.swing.JTextField();
        jLvalidityDate = new javax.swing.JLabel();
        jTvalidityDate = new javax.swing.JTextField();
        jLcountry = new javax.swing.JLabel();
        jTcountry = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTnameFather = new javax.swing.JTextField();
        jTnameMother = new javax.swing.JTextField();
        jLnotes = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTnotes = new javax.swing.JTextArea();
        jPOtherData = new javax.swing.JPanel();
        jLnumNIF = new javax.swing.JLabel();
        jTnumNIF = new javax.swing.JTextField();
        jLnumSS = new javax.swing.JLabel();
        jTnumSS = new javax.swing.JTextField();
        jLnumSNS = new javax.swing.JLabel();
        jTnumSNS = new javax.swing.JTextField();
        jLcardVersion = new javax.swing.JLabel();
        jTcardVersion = new javax.swing.JTextField();
        jLdeliveryDate = new javax.swing.JLabel();
        jTdeliveryDate = new javax.swing.JTextField();
        jLdeliveryEntity = new javax.swing.JLabel();
        jTdeliveryEntity = new javax.swing.JTextField();
        jLdocumentType = new javax.swing.JLabel();
        jTdocumentType = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTlocale = new javax.swing.JTextField();
        jPAddress = new javax.swing.JPanel();
        jLNacional = new javax.swing.JLabel();
        jLdistrictDesc = new javax.swing.JLabel();
        jTdistrictDesc = new javax.swing.JTextField();
        jLmunicipalityDesc = new javax.swing.JLabel();
        jTmunicipalityDesc = new javax.swing.JTextField();
        jLfreguesiaDesc = new javax.swing.JLabel();
        jTfreguesiaDesc = new javax.swing.JTextField();
        jLstreettype = new javax.swing.JLabel();
        jTstreettype = new javax.swing.JTextField();
        jLstreet = new javax.swing.JLabel();
        jTstreet = new javax.swing.JTextField();
        jLbuilding = new javax.swing.JLabel();
        jTbuilding = new javax.swing.JTextField();
        jLdoor = new javax.swing.JLabel();
        jTdoor = new javax.swing.JTextField();
        jLfloor = new javax.swing.JLabel();
        jTfloor = new javax.swing.JTextField();
        jLside = new javax.swing.JLabel();
        jTside = new javax.swing.JTextField();
        jLplace = new javax.swing.JLabel();
        jTplace = new javax.swing.JTextField();
        jLlocality = new javax.swing.JLabel();
        jTlocality = new javax.swing.JTextField();
        jLcp4 = new javax.swing.JLabel();
        jTcp4 = new javax.swing.JTextField();
        jLcp3 = new javax.swing.JLabel();
        jTcp3 = new javax.swing.JTextField();
        jLpostal = new javax.swing.JLabel();
        jTpostal = new javax.swing.JTextField();
        jPFoto = new javax.swing.JPanel();
        jLccPhoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Extrair dados do cartão de cidadão e validação dos números de identificação Português Europeu com JAVA Swing");
        setResizable(false);

        jBReadData.setText("Ler dados do cartão do cidadão");
        jBReadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBReadDataActionPerformed(evt);
            }
        });

        jPDataCard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jCivilID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLname.setText("Nome:");

        jTname.setEditable(false);
        jTname.setBackground(new java.awt.Color(255, 255, 255));

        jTsex.setEditable(false);
        jTsex.setBackground(new java.awt.Color(255, 255, 255));

        jLsex.setText("Sexo");

        jLheight.setText("Altura");

        jTheight.setEditable(false);
        jTheight.setBackground(new java.awt.Color(255, 255, 255));

        jLnationality.setText("Nacionalidade");

        jTnationality.setEditable(false);
        jTnationality.setBackground(new java.awt.Color(255, 255, 255));

        jbirthDate.setText("Data de nascimento:");

        jTbirthDate.setEditable(false);
        jTbirthDate.setBackground(new java.awt.Color(255, 255, 255));

        jLnumBI.setText("Nº documento:");

        jLvalidityDate.setText("Data de validade:  ");

        jTvalidityDate.setEditable(false);
        jTvalidityDate.setBackground(new java.awt.Color(255, 255, 255));

        jLcountry.setText("País:");

        jTcountry.setEditable(false);
        jTcountry.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Filiação:");

        jTnameFather.setEditable(false);
        jTnameFather.setBackground(new java.awt.Color(255, 255, 255));

        jTnameMother.setEditable(false);
        jTnameMother.setBackground(new java.awt.Color(255, 255, 255));

        jLnotes.setText("Notas:");

        jTnotes.setEditable(false);
        jTnotes.setColumns(20);
        jTnotes.setRows(5);
        jScrollPane3.setViewportView(jTnotes);

        javax.swing.GroupLayout jCivilIDLayout = new javax.swing.GroupLayout(jCivilID);
        jCivilID.setLayout(jCivilIDLayout);
        jCivilIDLayout.setHorizontalGroup(
            jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCivilIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLcountry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLsex, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLnumBI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLnotes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTnameMother, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTnameFather, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTname, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCivilIDLayout.createSequentialGroup()
                        .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jCivilIDLayout.createSequentialGroup()
                                    .addComponent(jTnumBI, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTnumBI2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLvalidityDate)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTvalidityDate, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jCivilIDLayout.createSequentialGroup()
                                    .addComponent(jTsex, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLheight)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTheight, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLnationality)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTnationality, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jbirthDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTbirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jCivilIDLayout.setVerticalGroup(
            jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCivilIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLname)
                    .addComponent(jTname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLsex)
                    .addComponent(jTsex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLheight)
                    .addComponent(jTheight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLnationality)
                    .addComponent(jTnationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbirthDate)
                    .addComponent(jTbirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTnumBI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLnumBI)
                    .addComponent(jLvalidityDate)
                    .addComponent(jTvalidityDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTnumBI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLcountry)
                    .addComponent(jTcountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTnameFather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTnameMother, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCivilIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCivilIDLayout.createSequentialGroup()
                        .addComponent(jLnotes)
                        .addGap(20, 63, Short.MAX_VALUE))
                    .addGroup(jCivilIDLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Identificação Civil", jCivilID);

        jPOtherData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLnumNIF.setText("N. Identificação fiscal: ");

        jTnumNIF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTnumNIFCaretUpdate(evt);
            }
        });

        jLnumSS.setText("N. Segurança social:");

        jTnumSS.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTnumSSCaretUpdate(evt);
            }
        });

        jLnumSNS.setText("N. Utente de saúde:  ");

        jTnumSNS.setEditable(false);
        jTnumSNS.setBackground(new java.awt.Color(255, 255, 255));

        jLcardVersion.setText("Versão do cartão:");

        jTcardVersion.setEditable(false);
        jTcardVersion.setBackground(new java.awt.Color(255, 255, 255));

        jLdeliveryDate.setText("Data de emissão: ");

        jTdeliveryDate.setEditable(false);
        jTdeliveryDate.setBackground(new java.awt.Color(255, 255, 255));

        jLdeliveryEntity.setText("Entidade emissora:");

        jTdeliveryEntity.setEditable(false);
        jTdeliveryEntity.setBackground(new java.awt.Color(255, 255, 255));

        jLdocumentType.setText("Tipo de documento:");

        jTdocumentType.setEditable(false);
        jTdocumentType.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Local de pedido:");

        jTlocale.setEditable(false);
        jTlocale.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPOtherDataLayout = new javax.swing.GroupLayout(jPOtherData);
        jPOtherData.setLayout(jPOtherDataLayout);
        jPOtherDataLayout.setHorizontalGroup(
            jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOtherDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLdocumentType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLdeliveryDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLnumSNS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLnumNIF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTnumNIF)
                    .addComponent(jTnumSNS)
                    .addComponent(jTdeliveryDate)
                    .addComponent(jTdocumentType, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLnumSS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLcardVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLdeliveryEntity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTnumSS)
                    .addComponent(jTcardVersion)
                    .addComponent(jTdeliveryEntity)
                    .addComponent(jTlocale, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                .addGap(178, 178, 178))
        );
        jPOtherDataLayout.setVerticalGroup(
            jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOtherDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLnumNIF)
                    .addComponent(jTnumNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLnumSS)
                    .addComponent(jTnumSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLnumSNS)
                    .addComponent(jTnumSNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLcardVersion)
                    .addComponent(jTcardVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLdeliveryDate)
                    .addComponent(jTdeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLdeliveryEntity)
                    .addComponent(jTdeliveryEntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPOtherDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLdocumentType)
                    .addComponent(jTdocumentType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jTlocale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Outros Dados", jPOtherData);

        jPAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLNacional.setText("Nacional");

        jLdistrictDesc.setText("Distrito:");

        jTdistrictDesc.setEditable(false);
        jTdistrictDesc.setBackground(new java.awt.Color(255, 255, 255));

        jLmunicipalityDesc.setText("Concelho:");

        jTmunicipalityDesc.setEditable(false);
        jTmunicipalityDesc.setBackground(new java.awt.Color(255, 255, 255));

        jLfreguesiaDesc.setText("Freguesia:");

        jTfreguesiaDesc.setEditable(false);
        jTfreguesiaDesc.setBackground(new java.awt.Color(255, 255, 255));

        jLstreettype.setText("Tipo de via:");

        jTstreettype.setEditable(false);
        jTstreettype.setBackground(new java.awt.Color(255, 255, 255));

        jLstreet.setText("Designação da via");

        jTstreet.setEditable(false);
        jTstreet.setBackground(new java.awt.Color(255, 255, 255));

        jLbuilding.setText("Tipo de edifício:");

        jTbuilding.setEditable(false);
        jTbuilding.setBackground(new java.awt.Color(255, 255, 255));

        jLdoor.setText("N. de porta:");

        jTdoor.setEditable(false);
        jTdoor.setBackground(new java.awt.Color(255, 255, 255));

        jLfloor.setText("Andar:");

        jTfloor.setEditable(false);
        jTfloor.setBackground(new java.awt.Color(255, 255, 255));

        jLside.setText("Lado:");

        jTside.setEditable(false);
        jTside.setBackground(new java.awt.Color(255, 255, 255));

        jLplace.setText("Lugar:");

        jTplace.setEditable(false);
        jTplace.setBackground(new java.awt.Color(255, 255, 255));

        jLlocality.setText("Localidade:");

        jTlocality.setEditable(false);
        jTlocality.setBackground(new java.awt.Color(255, 255, 255));

        jLcp4.setText("CP4:");

        jTcp4.setEditable(false);
        jTcp4.setBackground(new java.awt.Color(255, 255, 255));

        jLcp3.setText("CP3:");

        jTcp3.setEditable(false);
        jTcp3.setBackground(new java.awt.Color(255, 255, 255));

        jLpostal.setText("Localidade postal:");

        jTpostal.setEditable(false);
        jTpostal.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPAddressLayout = new javax.swing.GroupLayout(jPAddress);
        jPAddress.setLayout(jPAddressLayout);
        jPAddressLayout.setHorizontalGroup(
            jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPAddressLayout.createSequentialGroup()
                        .addComponent(jTdistrictDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTmunicipalityDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTfreguesiaDesc))
                    .addGroup(jPAddressLayout.createSequentialGroup()
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPAddressLayout.createSequentialGroup()
                                .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPAddressLayout.createSequentialGroup()
                                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLdoor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                            .addComponent(jTdoor, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTfloor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLfloor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jTstreettype)
                                    .addComponent(jLstreettype, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPAddressLayout.createSequentialGroup()
                                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPAddressLayout.createSequentialGroup()
                                                .addComponent(jLside, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLplace, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPAddressLayout.createSequentialGroup()
                                                .addComponent(jTside, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTplace)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTlocality, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLlocality, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPAddressLayout.createSequentialGroup()
                                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTstreet)
                                            .addComponent(jLstreet, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTbuilding, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLbuilding, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPAddressLayout.createSequentialGroup()
                                .addComponent(jLNacional)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(14, 14, 14))
                    .addGroup(jPAddressLayout.createSequentialGroup()
                        .addComponent(jLdistrictDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLmunicipalityDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLfreguesiaDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                    .addGroup(jPAddressLayout.createSequentialGroup()
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTcp4)
                            .addComponent(jLcp4, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPAddressLayout.createSequentialGroup()
                                .addComponent(jLcp3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLpostal, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPAddressLayout.createSequentialGroup()
                                .addComponent(jTcp3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTpostal, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPAddressLayout.setVerticalGroup(
            jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAddressLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLNacional)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLdistrictDesc)
                    .addComponent(jLmunicipalityDesc)
                    .addComponent(jLfreguesiaDesc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAddressLayout.createSequentialGroup()
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTdistrictDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTmunicipalityDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTfreguesiaDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLbuilding, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLstreettype)
                                .addComponent(jLstreet)))
                        .addGap(6, 6, 6)
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTstreettype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTstreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTbuilding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLdoor)
                            .addComponent(jLfloor))
                        .addGap(3, 3, 3)
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTdoor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTfloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTside, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTlocality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAddressLayout.createSequentialGroup()
                        .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLside)
                            .addComponent(jLplace)
                            .addComponent(jLlocality))
                        .addGap(23, 23, 23)))
                .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLpostal)
                    .addComponent(jLcp3)
                    .addComponent(jLcp4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTcp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTcp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTpostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Morada", jPAddress);

        jPFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLccPhoto.setBackground(new java.awt.Color(255, 255, 255));
        jLccPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLccPhoto.setText("Foto");

        javax.swing.GroupLayout jPFotoLayout = new javax.swing.GroupLayout(jPFoto);
        jPFoto.setLayout(jPFotoLayout);
        jPFotoLayout.setHorizontalGroup(
            jPFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPFotoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLccPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPFotoLayout.setVerticalGroup(
            jPFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFotoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLccPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPDataCardLayout = new javax.swing.GroupLayout(jPDataCard);
        jPDataCard.setLayout(jPDataCardLayout);
        jPDataCardLayout.setHorizontalGroup(
            jPDataCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDataCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPDataCardLayout.setVerticalGroup(
            jPDataCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDataCardLayout.createSequentialGroup()
                .addGroup(jPDataCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBReadData)
                .addContainerGap())
            .addComponent(jPDataCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBReadData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPDataCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBReadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBReadDataActionPerformed
        fullClean();
        if (CitizenCardPortuguese.loadPteidLib() != false) {
            if (readCCData() != false) {
                readCCAddress();
                readCCPhoto();
            }
        }
    }//GEN-LAST:event_jBReadDataActionPerformed

    private void jTnumNIFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTnumNIFCaretUpdate
        validateCitizenTaxNumber(jTnumNIF.getText().length());
    }//GEN-LAST:event_jTnumNIFCaretUpdate

    private void jTnumSSCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTnumSSCaretUpdate
        validateCitizenSSecurity(jTnumSS.getText().length());
    }//GEN-LAST:event_jTnumSSCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaPCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaPCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaPCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaPCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PaPCC().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBReadData;
    private javax.swing.JPanel jCivilID;
    private javax.swing.JLabel jLNacional;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLbuilding;
    private javax.swing.JLabel jLcardVersion;
    private javax.swing.JLabel jLccPhoto;
    private javax.swing.JLabel jLcountry;
    private javax.swing.JLabel jLcp3;
    private javax.swing.JLabel jLcp4;
    private javax.swing.JLabel jLdeliveryDate;
    private javax.swing.JLabel jLdeliveryEntity;
    private javax.swing.JLabel jLdistrictDesc;
    private javax.swing.JLabel jLdocumentType;
    private javax.swing.JLabel jLdoor;
    private javax.swing.JLabel jLfloor;
    private javax.swing.JLabel jLfreguesiaDesc;
    private javax.swing.JLabel jLheight;
    private javax.swing.JLabel jLlocality;
    private javax.swing.JLabel jLmunicipalityDesc;
    private javax.swing.JLabel jLname;
    private javax.swing.JLabel jLnationality;
    private javax.swing.JLabel jLnotes;
    private javax.swing.JLabel jLnumBI;
    private javax.swing.JLabel jLnumNIF;
    private javax.swing.JLabel jLnumSNS;
    private javax.swing.JLabel jLnumSS;
    private javax.swing.JLabel jLplace;
    private javax.swing.JLabel jLpostal;
    private javax.swing.JLabel jLsex;
    private javax.swing.JLabel jLside;
    private javax.swing.JLabel jLstreet;
    private javax.swing.JLabel jLstreettype;
    private javax.swing.JLabel jLvalidityDate;
    private javax.swing.JPanel jPAddress;
    private javax.swing.JPanel jPDataCard;
    private javax.swing.JPanel jPFoto;
    private javax.swing.JPanel jPOtherData;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTbirthDate;
    private javax.swing.JTextField jTbuilding;
    private javax.swing.JTextField jTcardVersion;
    private javax.swing.JTextField jTcountry;
    private javax.swing.JTextField jTcp3;
    private javax.swing.JTextField jTcp4;
    private javax.swing.JTextField jTdeliveryDate;
    private javax.swing.JTextField jTdeliveryEntity;
    private javax.swing.JTextField jTdistrictDesc;
    private javax.swing.JTextField jTdocumentType;
    private javax.swing.JTextField jTdoor;
    private javax.swing.JTextField jTfloor;
    private javax.swing.JTextField jTfreguesiaDesc;
    private javax.swing.JTextField jTheight;
    private javax.swing.JTextField jTlocale;
    private javax.swing.JTextField jTlocality;
    private javax.swing.JTextField jTmunicipalityDesc;
    private javax.swing.JTextField jTname;
    private javax.swing.JTextField jTnameFather;
    private javax.swing.JTextField jTnameMother;
    private javax.swing.JTextField jTnationality;
    private javax.swing.JTextArea jTnotes;
    private javax.swing.JTextField jTnumBI;
    private javax.swing.JTextField jTnumBI2;
    private javax.swing.JTextField jTnumNIF;
    private javax.swing.JTextField jTnumSNS;
    private javax.swing.JTextField jTnumSS;
    private javax.swing.JTextField jTplace;
    private javax.swing.JTextField jTpostal;
    private javax.swing.JTextField jTsex;
    private javax.swing.JTextField jTside;
    private javax.swing.JTextField jTstreet;
    private javax.swing.JTextField jTstreettype;
    private javax.swing.JTextField jTvalidityDate;
    private javax.swing.JLabel jbirthDate;
    // End of variables declaration//GEN-END:variables

    /**
     * Leitura dos dados de identificação fiscal e outros dados
     *
     * @return um valor booleano se foi lido com sucesso
     */
    private Boolean readCCData() {
        try {
            if (ccp.getData() != false) {
                jTname.setText(ccp.getFirstname() + " " + ccp.getName());
                jTsex.setText(ccp.getSex());
                jTheight.setText(ccp.getHeight());
                jTnationality.setText(ccp.getNationality());
                jTbirthDate.setText(ccp.getBirthDate().replaceAll("\\s", "-"));
                jTnumBI.setText(ccp.getNumBI().substring(0, 8));
                jTnumBI2.setText(ccp.getCardNumber().substring(8, 14).replaceAll("\\s", ""));
                jTvalidityDate.setText(ccp.getValidityDate().replaceAll("\\s", "-"));
                jTcountry.setText(ccp.getCountry());
                jTnameFather.setText(ccp.getFirstnameFather() + " " + ccp.getNameFather());
                jTnameMother.setText(ccp.getFirstnameMother() + " " + ccp.getNameMother());
                jTnotes.setText(ccp.getNotes());
                jTnumNIF.setText(ccp.getNumNIF());
                jTnumSS.setText(ccp.getNumSS());
                jTnumSNS.setText(ccp.getNumSNS());
                jTcardVersion.setText(ccp.getCardVersion());
                jTdeliveryDate.setText(ccp.getDeliveryDate().replaceAll("\\s", "-"));
                jTdeliveryEntity.setText(ccp.getDeliveryEntity());
                jTdocumentType.setText(ccp.getDocumentType());
                jTlocale.setText(ccp.getLocale());
                return true;
            }
        } catch (Exception ex) {
            erroMsg("Erro dados civil", ex.getMessage());
        }
        return false;
    }

    /**
     * Leitura da morada
     *
     * @return um valor booleano se foi lido com sucesso
     */
    private boolean readCCAddress() {
        try {
            if (ccp.getAddrPinTriesLeft() != 0) {

                infoMsg("Obter dados da morada", "Vai ser solicitado o pin da morada,\nO pin por defeito é:\n"
                        + " - cartão com a versão infeiror a 004.003 é : é desconhecido \n"
                        + " - cartão com a versão superior a 004.003 é : 0000.");
                if (ccp.getAddress() != false) {
                    jLNacional.setText(ccp.getAddrType());
                    jTdistrictDesc.setText(ccp.getDistrictDesc());
                    jTmunicipalityDesc.setText(ccp.getMunicipalityDesc());
                    jTfreguesiaDesc.setText(ccp.getFreguesiaDesc());
                    jTstreettype.setText(ccp.getStreettype());
                    jTstreet.setText(ccp.getStreet());
                    jTbuilding.setText(ccp.getBuilding());
                    jTdoor.setText(ccp.getDoor());
                    jTfloor.setText(ccp.getFloor());
                    jTside.setText(ccp.getSide());
                    jTplace.setText(ccp.getPlace());
                    jTlocality.setText(ccp.getLocality());
                    jTcp4.setText(ccp.getCp4());
                    jTcp3.setText(ccp.getCp3());
                    jTpostal.setText(ccp.getPostal());
                } else {
                    return false;
                }
                return true;
            } else {
                erroMsg("Erro", "Não é possível obter a morada.\nPin de morada está bloqueado. Resta(m) 0 tentativa(s).\nNão foi possível obter a morada.\n");
                return false;
            }
        } catch (Exception ex) {
            erroMsg("Erro morada", ex.getMessage());
            return false;
        }
    }

    /**
     * Função da leitura da fotografia
     *
     * @return um valor booleano se foi lido com sucesso
     */
    private boolean readCCPhoto() {
        try {
            jLccPhoto.setText("");
            BufferedImage bi = ccp.getPhoto();
            Image img = bi;
            if (img != null) {
                Image newimg = img.getScaledInstance(130, 180, java.awt.Image.SCALE_SMOOTH);
                jLccPhoto.setText(null);
                jLccPhoto.setIcon(new ImageIcon(Scalr.resize(imageToBufferedImage(newimg), 140))); 
                return true;
            } else {
                jLccPhoto.setText("Foto");
                erroMsg("Erro obter foto", "Fotografia não foi obtida com sucesso.");
                return false;
            }
//            
//            BufferedImage xpto = ccp.getPhoto();
//            Image img = xpto;
//            Image newimg = img.getScaledInstance(130, 180, java.awt.Image.SCALE_SMOOTH);
//            ImageIcon newIcon = new ImageIcon(newimg);
//            jLccPhoto.setIcon(newIcon);
//            return true;
           
        } catch (Exception ex) {
            erroMsg("Erro obter foto", ex.getMessage());
            return false;
        }
    }

    /**
     * Limpa todos os campos
     */
    private void fullClean() {
        jTname.setText(null);
        jTsex.setText(null);
        jTheight.setText(null);
        jTnationality.setText(null);
        jTbirthDate.setText(null);
        jTnumBI.setText(null);
        jTnumBI2.setText(null);
        jTvalidityDate.setText(null);
        jTcountry.setText(null);
        jTnameFather.setText(null);
        jTnameMother.setText(null);
        jTnotes.setText(null);
        jTnumNIF.setText(null);
        jTnumSS.setText(null);
        jTnumSNS.setText(null);
        jTcardVersion.setText(null);
        jTdeliveryDate.setText(null);
        jTdeliveryEntity.setText(null);
        jTdocumentType.setText(null);
        jTlocale.setText(null);
        jTdistrictDesc.setText(null);
        jTmunicipalityDesc.setText(null);
        jTfreguesiaDesc.setText(null);
        jTstreettype.setText(null);
        jTstreet.setText(null);
        jTbuilding.setText(null);
        jTdoor.setText(null);
        jTfloor.setText(null);
        jTside.setText(null);
        jTplace.setText(null);
        jTlocality.setText(null);
        jTcp3.setText(null);
        jTcp4.setText(null);
        jTpostal.setText(null);
        jLccPhoto.setIcon(null);
        jLccPhoto.setText("Foto");
    }

    /**
     * *
     * Validação do NIF
     *
     * @param value número de caracteres do NIF
     */
    private void validateCitizenTaxNumber(int value) {
        try {
            switch (value) {
                case 0:
                    jTnumNIF.setBackground(Color.white);
                    jTnumNIF.setForeground(Color.black);
                    break;
                case 9:
                    if (validatorTaxNumber(jTnumNIF.getText()) != false) {
                        jTnumNIF.setBackground(Color.green);
                        jTnumNIF.setForeground(Color.black);
                    } else {
                        jTnumNIF.setBackground(Color.red);
                        jTnumNIF.setForeground(Color.white);
                    }
                    break;
                default:
                    jTnumNIF.setBackground(Color.red);
                    jTnumNIF.setForeground(Color.white);
                    break;
            }
        } catch (Exception ex) {
            erroMsg("Erro ao validar o número de identificação fisacal", ex.getMessage());
        }
    }

    /**
     * Validação do número da segurança social
     *
     * @param value número de caracteres do número da segurança social
     */
    private void validateCitizenSSecurity(Integer value) {
        try {
            switch (value) {
                case 0:
                    jTnumSS.setBackground(Color.white);
                    jTnumSS.setForeground(Color.black);
                    break;
                case 11:
                    if (validateSocialSecurityID(jTnumSNS.getText()) != false) {
                        jTnumSS.setBackground(Color.green);
                        jTnumSS.setForeground(Color.black);
                    } else {
                        jTnumSS.setBackground(Color.red);
                        jTnumSS.setForeground(Color.white);
                    }
                    break;
                default:
                    jTnumSS.setBackground(Color.red);
                    jTnumSS.setForeground(Color.white);
                    break;
            }
        } catch (Exception ex) {
            erroMsg("Erro ao validar o número de beneficiário", ex.getMessage());
        }
    }

    public static BufferedImage imageToBufferedImage(Image im) {
        BufferedImage bi = new BufferedImage(im.getWidth(null), im.getHeight(null), BufferedImage.TYPE_INT_RGB);
        Graphics bg = bi.getGraphics();
        bg.drawImage(im, 0, 0, null);
        bg.dispose();
        return bi;
    }

}
